{% extends 'base.html.twig' %}

{% block title %}XC3 Checklist - Character Classes{% endblock %}

{% block body %}
    <h1>Character Classes</h1>

    <table>
        <thead>
        <tr>
            <th>Image</th>
            <th>Name</th>
            <th>Role</th>
            <th>Unlocked</th>
            <th>Ascended</th>
            <th>Noah</th>
            <th>Mio</th>
            <th>Eunie</th>
            <th>Taion</th>
            <th>Lanz</th>
            <th>Sena</th>
        </tr>
        </thead>
        <tbody>
        {% for characterClass in characterClasses %}
            {% set userCharacterClass = userCharacterClassesMap[characterClass.id] ?? null %}
            <tr class="character-class-row"
                data-character-id="{{ characterClass.id }}"
                data-name="{{ characterClass.name }}"
                data-role="{{ characterClass.role }}"
                data-weapon="{{ characterClass.weapon }}"
                data-nation="{{ characterClass.nation }}"
                data-offense="{{ characterClass.offense }}"
                data-defense="{{ characterClass.defense }}"
                data-healing="{{ characterClass.healing }}"
                data-difficulty="{{ characterClass.difficulty }}"
                data-img-index="{{ characterClass.imgIndex }}">

                <td>
                    <img src="{{ asset('img/classes/' ~ characterClass.imgIndex ~ '.png') }}"
                         alt="{{ characterClass.name }}">
                </td>

                <td>{{ characterClass.name }}</td>

                <td>
                    <img src="{{ asset('img/roles/' ~ characterClass.role ~ '.png') }}" alt="{{ characterClass.role }}">
                </td>

                {% set attributes = ['unlocked', 'ascended', 'noah', 'mio', 'eunie', 'taion', 'lanz', 'sena'] %}
                {% for attribute in attributes %}
                    <td>
                        <input type="checkbox"
                               class="character-checkbox"
                               data-attribute="{{ attribute }}"
                               data-id="{{ characterClass.id }}"
                                {% if attribute == 'unlocked' and userCharacterClass.isUnlocked() %}
                                    checked
                                {% elseif attribute == 'ascended' and userCharacterClass.isAscended() %}
                                    checked
                                {% elseif attribute == 'noah' and userCharacterClass.isNoah() %}
                                    checked
                                {% elseif attribute == 'mio' and userCharacterClass.isMio() %}
                                    checked
                                {% elseif attribute == 'eunie' and userCharacterClass.isEunie() %}
                                    checked
                                {% elseif attribute == 'taion' and userCharacterClass.isTaion() %}
                                    checked
                                {% elseif attribute == 'lanz' and userCharacterClass.isLanz() %}
                                    checked
                                {% elseif attribute == 'sena' and userCharacterClass.isSena() %}
                                    checked
                                {% endif %}
                               onchange="updateCharacterStatus(this)">
                    </td>
                {% endfor %}
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <!-- Card for displaying detailed character class info -->
    <div id="character-class-card" class="card" style="display: none;">
        <button id="close-card" class="close-btn">X</button>
        <h2 id="class-name"></h2>
        <img src="" alt="" id="img-index" height="250px">
        <img src="" alt="" id="role-img" height="100px">
        <p><strong>Weapon:</strong> <span id="class-weapon"></span></p>
        <p><strong>Nation:</strong> <span id="class-nation"></span></p>
        <p><strong>Offense:</strong> <span id="class-offense"></span></p>
        <p><strong>Defense:</strong> <span id="class-defense"></span></p>
        <p><strong>Healing:</strong> <span id="class-healing"></span></p>
        <p><strong>Difficulty:</strong> <span id="class-difficulty"></span></p>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        const csrfToken = '{{ csrf_token('update_character_status') }}'; // Generate the CSRF token for the update_character_status route
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const classRows = document.querySelectorAll('.character-class-row');
            const classCard = document.getElementById('character-class-card');
            const className = document.getElementById('class-name');
            const roleImg = document.getElementById('role-img');
            const imgIndex = document.getElementById('img-index'); // New image element for imgIndex
            const closeCardButton = document.getElementById('close-card');

            // New fields
            const classWeapon = document.getElementById('class-weapon');
            const classNation = document.getElementById('class-nation');
            const classOffense = document.getElementById('class-offense');
            const classDefense = document.getElementById('class-defense');
            const classHealing = document.getElementById('class-healing');
            const classDifficulty = document.getElementById('class-difficulty');

            classRows.forEach(row => {
                row.addEventListener('click', function (event) {
                    // Prevent the row click from triggering when clicking on the checkbox
                    if (event.target.tagName.toLowerCase() === 'input') {
                        return;
                    }

                    const name = row.dataset.name;
                    const role = row.dataset.role;
                    const weapon = row.dataset.weapon;
                    const nation = row.dataset.nation;
                    const offense = row.dataset.offense;
                    const defense = row.dataset.defense;
                    const healing = row.dataset.healing;
                    const difficulty = row.dataset.difficulty;
                    const imgIndexPath = row.dataset.imgIndex;

                    // Set values
                    className.textContent = name;
                    imgIndex.src = `/img/classes/${imgIndexPath}.png`;
                    imgIndex.alt = name;

                    roleImg.src = `/img/roles/${role}.png`;
                    roleImg.alt = role;

                    // Populate new fields
                    classWeapon.textContent = weapon || 'N/A';
                    classNation.textContent = nation || 'N/A';
                    classOffense.textContent = offense || 'N/A';
                    classDefense.textContent = defense || 'N/A';
                    classHealing.textContent = healing || 'N/A';
                    classDifficulty.textContent = difficulty || 'N/A';

                    classCard.style.display = 'block';
                });
            });

            closeCardButton.addEventListener('click', function () {
                classCard.style.display = 'none';
            });

            // Select all checkboxes with class 'character-checkbox'
            const checkboxes = document.querySelectorAll('.character-checkbox');

            // Add event listeners to each checkbox
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function (event) {
                    event.stopPropagation(); // Prevent the row click event

                    const characterId = this.dataset.id;
                    const field = this.dataset.attribute;
                    const value = this.checked ? 1 : 0;

                    // Send AJAX request to update database
                    const formData = new FormData();
                    formData.append('field', field);
                    formData.append('value', value);
                    formData.append('_csrf_token', csrfToken); // Include CSRF token

                    fetch(`/update-character-status/${characterId}`, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest' // Indicate that this is an AJAX request
                        }
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                console.log(data.message);
                            } else {
                                alert(data.error || 'Failed to update status');
                                // Optionally, revert the checkbox state
                                this.checked = !this.checked;
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('An error occurred while updating the status.');
                            // Optionally, revert the checkbox state
                            this.checked = !this.checked;
                        });
                });
            });
        });
    </script>
{% endblock %}
